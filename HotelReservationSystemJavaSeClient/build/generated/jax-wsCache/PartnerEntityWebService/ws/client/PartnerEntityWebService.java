
package ws.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PartnerEntityWebService", targetNamespace = "http://ws.session.ejb/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PartnerEntityWebService {


    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns ws.client.PartnerEntity
     * @throws PartnerNotFoundException_Exception
     * @throws InvalidLoginCredentialException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "partnerLogin", targetNamespace = "http://ws.session.ejb/", className = "ws.client.PartnerLogin")
    @ResponseWrapper(localName = "partnerLoginResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.PartnerLoginResponse")
    @Action(input = "http://ws.session.ejb/PartnerEntityWebService/partnerLoginRequest", output = "http://ws.session.ejb/PartnerEntityWebService/partnerLoginResponse", fault = {
        @FaultAction(className = PartnerNotFoundException_Exception.class, value = "http://ws.session.ejb/PartnerEntityWebService/partnerLogin/Fault/PartnerNotFoundException"),
        @FaultAction(className = InvalidLoginCredentialException_Exception.class, value = "http://ws.session.ejb/PartnerEntityWebService/partnerLogin/Fault/InvalidLoginCredentialException")
    })
    public PartnerEntity partnerLogin(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws InvalidLoginCredentialException_Exception, PartnerNotFoundException_Exception
    ;

    /**
     * 
     * @param partnerId
     * @return
     *     returns java.util.List&lt;ws.client.ReservationEntity&gt;
     * @throws PartnerNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveAllPartnerReservations", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveAllPartnerReservations")
    @ResponseWrapper(localName = "retrieveAllPartnerReservationsResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveAllPartnerReservationsResponse")
    @Action(input = "http://ws.session.ejb/PartnerEntityWebService/retrieveAllPartnerReservationsRequest", output = "http://ws.session.ejb/PartnerEntityWebService/retrieveAllPartnerReservationsResponse", fault = {
        @FaultAction(className = PartnerNotFoundException_Exception.class, value = "http://ws.session.ejb/PartnerEntityWebService/retrieveAllPartnerReservations/Fault/PartnerNotFoundException")
    })
    public List<ReservationEntity> retrieveAllPartnerReservations(
        @WebParam(name = "partnerId", targetNamespace = "")
        Long partnerId)
        throws PartnerNotFoundException_Exception
    ;

}
